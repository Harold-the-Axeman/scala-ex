

### NoDocs ###
GET     /info                       @com.getgua.controllers.ServerStatusCheckController.info(code: String)
### NoDocs ###
GET     /status                     @com.getgua.controllers.ServerStatusCheckController.status(code: String)
### NoDocs ###
GET     /token                      @com.getgua.controllers.ServerStatusCheckController.check_token(code: String, id: Long)
### NoDocs ###
GET     /                           @com.getgua.controllers.NavigatorController.info

###
#  summary: Navigator Json
#  tags: ["Navigator"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.daos.NavigatorWithType'
###
GET     /navigator                  @com.getgua.controllers.NavigatorController.info

###
#  summary: Login/Register a User
#  tags: ["Auth"]
#  responses:
#    200:
#      description: success
#  parameters:
#    - name: body
#      schema:
#        $ref: '#/definitions/com.getgua.controllers.Auth'
###
POST    /login                      @com.getgua.controllers.AuthController.social_auth
###
#  summary: If a Telephone User Exists
#  tags: ["Auth"]
#  responses:
#    200:
#      description: success
###
GET     /auth/exists                @com.getgua.controllers.AuthController.exists(telephone: String)

###
#  summary: Get User Rrofile
#  tags: ["User"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.daos.UserProfile'
###
GET     /user/profile               @com.getgua.controllers.UserController.profile
###
#  summary: Get Other User Profile
#  tags: ["User"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.daos.OtherProfile'
###
GET     /user/other                 @com.getgua.controllers.UserController.other(user_id: Long)
###
#  summary: Set User Umeng Token
#  tags: ["User"]
#  responses:
#    200:
#      description: success
###
GET     /user/token                 @com.getgua.controllers.UserController.token(token: String, token_type: String)


###
#  summary: Submit a Url
#  tags: ["Url"]
#  responses:
#    200:
#      description: success
#  parameters:
#    - name: body
#      schema:
#        $ref: '#/definitions/com.getgua.controllers.UrlSubmit'
###
POST    /url/submit                 @com.getgua.controllers.UrlController.submit
###
#  summary: List of User's Submitted Url
#  tags: ["Url"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.services.UrlUserStatus'
###
GET     /url/list                   @com.getgua.controllers.UrlController.list(user_id: Long)
###
#  summary: Get Url Feeds
#  tags: ["Url"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.services.UrlUserStatus'
###
GET     /url/feeds                  @com.getgua.controllers.UrlController.feeds(category: Option[String])
###
#  summary: Comments List of a Url
#  tags: ["Url"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.services.CommentUserStatus'
###
GET     /url/comments               @com.getgua.controllers.UrlController.comments(url_id: Long)
###
#  summary: Get Info of a Url
#  tags: ["Url"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.services.UrlUserStatus'
###
GET     /url/get                    @com.getgua.controllers.UrlController.get(url_id: Long)

###
#  summary: User Like a Url
#  tags: ["Url.Like"]
#  responses:
#    200:
#      description: success
###
GET     /url/like/add              @com.getgua.controllers.UrlLikeController.add(url_id: Long)
###
#  summary: User Unlike a Url
#  tags: ["Url.Like"]
#  responses:
#    200:
#      description: success
###
GET     /url/like/delete           @com.getgua.controllers.UrlLikeController.delete(url_id: Long)
###
#  summary: Like List of a Url
#  tags: ["Url.Like"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.services.UserWrapper'
###
GET     /url/like/list             @com.getgua.controllers.UrlLikeController.list(url_id: Long)

###
#  summary: User Comment a Url
#  tags: ["Comment"]
#  responses:
#    200:
#      description: success
#  parameters:
#    - name: body
#      schema:
#        $ref: '#/definitions/com.getgua.controllers.CommentSubmit'
###
POST    /comment/add                @com.getgua.controllers.CommentController.add
###
#  summary: Comment List of a User
#  tags: ["Comment"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.daos.CommentUrlUser'
###
GET     /comment/list               @com.getgua.controllers.CommentController.list(user_id: Long)

###
#  summary: User Like a Comment
#  tags: ["Comment.Like"]
#  responses:
#    200:
#      description: success
###
GET     /comment/like/add           @com.getgua.controllers.CommentLikeController.add(comment_id: Long)
###
#  summary: User Unlike a Comment
#  tags: ["Comment.Like"]
#  responses:
#    200:
#      description: success
###
GET     /comment/like/delete        @com.getgua.controllers.CommentLikeController.delete(comment_id: Long)
###
#  summary: Comment Like List of a Comment
#  tags: ["Comment.Like"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.services.UserWrapper'
###
GET     /comment/like/list          @com.getgua.controllers.CommentLikeController.list(comment_id: Long)

###
#  summary: User Like a User
#  tags: ["Relation"]
#  responses:
#    200:
#      description: success
###
GET     /relation/add               @com.getgua.controllers.UserRelationController.add(to_id: Long)
###
#  summary: User Unlike a User
#  tags: ["Relation"]
#  responses:
#    200:
#      description: success
###
GET     /relation/delete            @com.getgua.controllers.UserRelationController.delete(to_id: Long)
###
#  summary: User Like List of a User
#  tags: ["Relation"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.services.UserWrapper'
###
GET     /relation/list              @com.getgua.controllers.UserRelationController.list

###
#  summary: User's Message List
#  tags: ["Message"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.models.UserMailbox'
###
GET     /message/list               @com.getgua.controllers.UserMailboxController.list
###
#  summary: Check If a User Has New Message
#  tags: ["Message"]
#  responses:
#    200:
#      description: success
###
GET     /message/status             @com.getgua.controllers.UserMailboxController.status

###
#  summary: User Add a Url Collection
#  tags: ["Collection"]
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/com.getgua.models.UserCollection'
###
GET     /collection/list            @com.getgua.controllers.UserCollectionController.list
###
#  summary: User Remove a Url Collection
#  tags: ["Collection"]
#  responses:
#    200:
#      description: success
#  parameters:
#    - name: body
#      schema:
#        $ref: '#/definitions/com.getgua.controllers.UrlCollection'
###
POST    /collection/add             @com.getgua.controllers.UserCollectionController.add
###
#  summary: Url Collection List of a User
#  tags: ["Collection"]
#  responses:
#    200:
#      description: success
#  parameters:
#    - name: body
#      schema:
#        $ref: '#/definitions/com.getgua.controllers.UrlCollection'
###
POST    /collection/delete          @com.getgua.controllers.UserCollectionController.delete

###
#  summary: User Submit a Log
#  tags: ["Log"]
#  responses:
#    200:
#      description: success
#  parameters:
#    - name: body
#      schema:
#        $ref: '#/definitions/com.getgua.controllers.SubmitLog'
###
POST    /log/submit                 @com.getgua.controllers.SystemLogController.submit


###
#  summary: OAuth User Register/Login
#  tags: ["OAuth"]
#  responses:
#    200:
#      description: success
###
#GET     /oauth/weichat              @com.getgua.controllers.WeichatController.auth(code: String, state: Option[String], client_id: String, redirect_url: String)

###
#  summary: SMS Check Code Creation
#  tags: ["SMS"]
#  responses:
#    200:
#      description: success
###
GET     /sms/create                 @com.getgua.controllers.SMSController.create(telephone: String)
###
#  summary: Check a SMS Check Code
#  tags: ["SMS"]
#  responses:
#    200:
#      description: success
###
GET     /sms/validate               @com.getgua.controllers.SMSController.validate(telephone: String, code: String)

### NoDocs ###
#POST    /proxy                      @com.getgua.controllers.ProxyController.proxy

### NoDocs ###
GET   /docs/swagger.json         @com.getgua.controllers.ApiSpecs.specs(code: String)

### NoDocs ###
GET   /docs/swagger-ui/*file        controllers.Assets.at(path:String="/public/lib/swagger-ui", file:String)

### NoDocs ###
GET     /assets/*file               controllers.Assets.at(path="/public", file)


    