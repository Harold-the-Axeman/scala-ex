# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
# For database connection test
GET     /info                       @controllers.ServerStatusCheckController.info(code: String)
GET     /status                     @controllers.ServerStatusCheckController.status(code: String)
GET     /token                      @controllers.ServerStatusCheckController.check_token(code: String, id: Long)
GET     /                           @controllers.NavigatorController.info

# Auth
POST    /login                      @controllers.AuthController.social_auth
GET     /auth/exists                @controllers.AuthController.exists(telephone: String)
#(client_id: String, auth_type: Option[String], third_party_id: Option[String], name: Option[String], avatar:Option[String])

# User
GET     /user/profile               @controllers.UserController.profile
GET     /user/other                 @controllers.UserController.other(user_id: Long)
GET     /user/token                 @controllers.UserController.token(token: String, token_type: String)

# URL/Article
POST    /url/submit                 @controllers.UrlController.submit
#(user_id: Long, url: String, title: String, description: String, anonymous: Int)
GET     /url/list                   @controllers.UrlController.list(user_id: Long)
GET     /url/feeds                  @controllers.UrlController.feeds
GET     /url/comments               @controllers.UrlController.comments(url_id: Long)
GET     /url/get                    @controllers.UrlController.get(url_id: Long)

# Comment
POST    /comment/add                @controllers.CommentController.add
#(url_id: Long, content: String, user_id: Long, at_user_id: Option[Long])
GET     /comment/list               @controllers.CommentController.list(user_id: Long)

# Navigator
GET     /navigator                  @controllers.NavigatorController.info

# UserRelation
GET     /relation/add               @controllers.UserRelationController.add(to_id: Long)
GET     /relation/delete            @controllers.UserRelationController.delete(to_id: Long)
GET     /relation/list              @controllers.UserRelationController.list

# UserMessage
GET     /message/list               @controllers.UserMailboxController.list
GET     /message/status             @controllers.UserMailboxController.status

# CommentLike
GET     /comment/like/add           @controllers.CommentLikeController.add(comment_id: Long)
GET     /comment/like/delete        @controllers.CommentLikeController.delete(comment_id: Long)
GET     /comment/like/list          @controllers.CommentLikeController.list(comment_id: Long)

# UserCollection
GET     /collection/list            @controllers.UserCollectionController.list
POST    /collection/add             @controllers.UserCollectionController.add
POST    /collection/delete          @controllers.UserCollectionController.delete

# Log
POST    /log/submit                 @controllers.SystemLogController.submit

# Umeng
POST    /push/unicast               @controllers.UMengPushController.unicast
POST    /push/broadcast             @controllers.UMengPushController.broadcast

# CMS Service
GET     /cms/user/list              @controllers.CMSController.user_list(code: String)
POST    /cms/user/submit            @controllers.CMSController.user_submit(code: String)
GET     /cms/system/list            @controllers.CMSController.system_list(code: String)
POST    /cms/system/submit          @controllers.CMSController.system_submit(code: String)
POST    /cms/editor/submit          @controllers.CMSController.editor_submit(code: String)
GET     /cms/category/list          @controllers.CMSController.uncategory_list(code: String)
GET     /cms/category/update        @controllers.CMSController.set_category(code: String, url_id: Long, category: String)

# Weixin Web Auth
GET     /oauth/weichat              @controllers.WeichatController.auth(code: Option[String], state: Option[String], client_id: String)
GET     /oauth/redirect             @controllers.WeichatController.redirect_url(code: String, client_id: String)

# SMS Check Code
GET     /sms/send                   @controllers.SMSController.send(telephone: String, code: String)
GET     /sms/create                 @controllers.SMSController.create(telephone: String)
GET     /sms/validate               @controllers.SMSController.validate(telephone: String, code: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

    