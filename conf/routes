# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
# For database connection test
GET     /info                       @com.getgua.controllers.ServerStatusCheckController.info(code: String)
GET     /status                     @com.getgua.controllers.ServerStatusCheckController.status(code: String)
GET     /token                      @com.getgua.controllers.ServerStatusCheckController.check_token(code: String, id: Long)
GET     /                           @com.getgua.controllers.NavigatorController.info

# Navigator
GET     /navigator                  @com.getgua.controllers.NavigatorController.info

# Auth

###
#  summary: 用户注册或者登陆
#  tags: ["Auth"]
#  responses:
#    200:
#      description: success
#  parameters:
#    - name: body
#      schema:
#        $ref: '#/definitions/com.getgua.controllers.Auth'
###
POST    /login                      @com.getgua.controllers.AuthController.social_auth
GET     /auth/exists                @com.getgua.controllers.AuthController.exists(telephone: String)
#(client_id: String, auth_type: Option[String], third_party_id: Option[String], name: Option[String], avatar:Option[String])

# User
GET     /user/profile               @com.getgua.controllers.UserController.profile
GET     /user/other                 @com.getgua.controllers.UserController.other(user_id: Long)
GET     /user/token                 @com.getgua.controllers.UserController.token(token: String, token_type: String)

# URL/Article
POST    /url/submit                 @com.getgua.controllers.UrlController.submit
#(user_id: Long, url: String, title: String, description: String, anonymous: Int)
GET     /url/list                   @com.getgua.controllers.UrlController.list(user_id: Long)
GET     /url/feeds                  @com.getgua.controllers.UrlController.feeds(category: Option[String])
GET     /url/comments               @com.getgua.controllers.UrlController.comments(url_id: Long)
GET     /url/get                    @com.getgua.controllers.UrlController.get(url_id: Long)

# UrlLike
GET     /url/like/add              @com.getgua.controllers.UrlLikeController.add(url_id: Long)
GET     /url/like/delete           @com.getgua.controllers.UrlLikeController.delete(url_id: Long)
GET     /url/like/list             @com.getgua.controllers.UrlLikeController.list(url_id: Long)

# Comment
POST    /comment/add                @com.getgua.controllers.CommentController.add
#(url_id: Long, content: String, user_id: Long, at_user_id: Option[Long])
GET     /comment/list               @com.getgua.controllers.CommentController.list(user_id: Long)

# CommentLike
GET     /comment/like/add           @com.getgua.controllers.CommentLikeController.add(comment_id: Long)
GET     /comment/like/delete        @com.getgua.controllers.CommentLikeController.delete(comment_id: Long)
GET     /comment/like/list          @com.getgua.controllers.CommentLikeController.list(comment_id: Long)

# UserRelation
GET     /relation/add               @com.getgua.controllers.UserRelationController.add(to_id: Long)
GET     /relation/delete            @com.getgua.controllers.UserRelationController.delete(to_id: Long)
GET     /relation/list              @com.getgua.controllers.UserRelationController.list

# UserMessage
GET     /message/list               @com.getgua.controllers.UserMailboxController.list
GET     /message/status             @com.getgua.controllers.UserMailboxController.status

# UserCollection
GET     /collection/list            @com.getgua.controllers.UserCollectionController.list
POST    /collection/add             @com.getgua.controllers.UserCollectionController.add
POST    /collection/delete          @com.getgua.controllers.UserCollectionController.delete

# Log
POST    /log/submit                 @com.getgua.controllers.SystemLogController.submit

# Umeng
#POST    /push/unicast               @controllers.UMengPushController.unicast
#POST    /push/broadcast             @controllers.UMengPushController.broadcast

# CMS Service
GET     /cms/user/list              @com.getgua.controllers.CMSController.user_list(code: String)
POST    /cms/user/submit            @com.getgua.controllers.CMSController.user_submit(code: String)
GET     /cms/system/list            @com.getgua.controllers.CMSController.system_list(code: String)
POST    /cms/system/submit          @com.getgua.controllers.CMSController.system_submit(code: String)
POST    /cms/editor/submit          @com.getgua.controllers.CMSController.editor_submit(code: String)
GET     /cms/category/list          @com.getgua.controllers.CMSController.uncategory_list(code: String)
GET     /cms/category/update        @com.getgua.controllers.CMSController.set_category(code: String, url_id: Long, category: String)

# Weixin Web Auth
GET     /oauth/weichat              @com.getgua.controllers.WeichatController.auth(code: String, state: Option[String], client_id: String, redirect_url: String)

# SMS Check Code
GET     /sms/create                 @com.getgua.controllers.SMSController.create(telephone: String)
GET     /sms/validate               @com.getgua.controllers.SMSController.validate(telephone: String, code: String)

# Proxy Server
POST    /proxy                      @com.getgua.controllers.ProxyController.proxy

###
# summary: swagger definition
# description: for swagger UI to consume
###
GET   /docs/swagger.json         @com.getgua.controllers.ApiSpecs.specs

### NoDocs ###
GET   /docs/swagger-ui/*file        controllers.Assets.at(path:String="/public/lib/swagger-ui", file:String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

    